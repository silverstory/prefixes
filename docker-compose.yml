version: "3.3"
services:
  web:
    image: iameprel/prefixes:0.1.0
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
    user: root
    working_dir: /usr/src/app
    secrets:
      - JWT_SECRET
      - DB_HOST
      - DB_MODE
      - DB_NAME
      - DB_USER_NAME
      - DB_PASSWORD
      - TWILIO_ACCOUNT_SID
      - TWILIO_AUTH_TOKEN
      - TWILIO_FROM_NUMBER
    environment:
      NODE_ENV: production
    ports:
      - 4000:3000
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
secrets:
  JWT_SECRET:
    external: true
  DB_MODE:
    external: true
  DB_HOST:
    external: true
  DB_NAME:
    external: true
  DB_USER_NAME:
    external: true
  DB_PASSWORD:
    external: true
  TWILIO_ACCOUNT_SID:
    external: true
  TWILIO_AUTH_TOKEN:
    external: true
  TWILIO_FROM_NUMBER:
    external: true
networks:
  webnet:

# Initial deploy to cluster
# git pull origin master
# docker build -t image:tag .
#            e.g: prefixes:0.0.1
# docker tag prefixes:0.0.1 local-registry:port/repo:tag
# docker push local-registry:port/repo:tag
# set docker-compose.yml > image: should be > local-registry:port/repo:tag
# docker stack deploy -c docker-compose.yml prod
# note: if no tag is set on repo, the tag 'latest' is used

# New version deployment on cluster
# git pull origin master
# docker build -t image:tag .
#            e.g: prefixes:0.0.2
# docker tag prefixes:0.0.2 local-registry:port/repo:tag
# docker push local-registry:port/repo:tag
# set docker-compose.yml > image: should be > local-registry:port/repo:tag
# docker service update --image repo/image:tag prod_web
#                          e.g: iameprel/prefixes:0.0.2

# SCALING
# Scale the cluster service to add 30 more containers
# docker service scale prod_web=50
